trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'Visual Studio Professional(cb9ac514-a7d4-4892-8b9d-537c4ad22fb3)'     # Azure service connection name
  resourceGroup: 'dev12-smartpos-rg'             # Resource group where the Data Factory and Key Vault reside
  keyVaultName: 'smartposkeyvault1'              # Name of the Azure Key Vault
  dataFactoryName: 'dev12smartposadf'        # Name of the Azure Data Factory
  secretName: 'testsecret'  
stages:
- stage: GrantAccess
  jobs:
  - job: GrantAccess
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(azureSubscription)
        ScriptType: 'InlineScript'
        Inline: |
         # Parameters
         $resourceGroupName = "$(resourceGroup)"
         $dataFactoryName = "$(dataFactoryName)"
         $keyVaultName = "$(keyVaultName)"
          # Get the Data Factory identity
          $dataFactory = az datafactory show --name $dataFactoryName --resource-group $resourceGroupName --query "identity.principalId" -o tsv

          # Get the Key Vault ID
          $keyVaultId = az keyvault show --name $keyVaultName --resource-group $resourceGroupName --query "id" -o tsv

           # Assign the Key Vault Secrets User role to the Data Factory's managed identity
           az role assignment create --assignee $dataFactory --role "Key Vault Administrator" --scope $keyVaultId
          Write-Output "Granted 'Key Vault Administrator' role to Data Factory '$dataFactoryName' for Key Vault '$keyVaultName'
           # Test access by trying to get the secret
          try {
              $secretValue = Get-AzKeyVaultSecret -VaultName $keyVaultName -Name $secretName
              Write-Output "Successfully retrieved the secret '$($secretValue.Name)'. Value: $($secretValue.SecretValueText)"
          } catch {
              Write-Error "Failed to retrieve the secret '$($secretName)'. Error: $_"
              exit 1
          }
        azurePowerShellVersion: 'LatestVersion'
