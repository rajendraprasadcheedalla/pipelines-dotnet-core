trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'Visual Studio Professional(cb9ac514-a7d4-4892-8b9d-537c4ad22fb3)'     # Azure service connection name
  resourceGroup: 'dev12-smartpos-rg'             # Resource group where the Data Factory and Key Vault reside
  keyVaultName: 'dev12smartposkeyvalut'              # Name of the Azure Key Vault
  dataFactoryName: 'dev12smartposadf'        # Name of the Azure Data Factory
  secretName: 'testsecret'  
stages:
- stage: GrantAccess
  jobs:
  - job: GrantAccess
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(azureSubscription)
        ScriptType: 'InlineScript'
        Inline: |
          # Parameters
           userPrincipalName: "Rajendraprasad_Cheedalla@epam.com"  # The email or UPN of the user
           roleDefinitionName: "User Access Administrator"        # The role you want to assign
           scope: "/subscriptions/{subscription-id}" # Replace with your subscription ID

            resources:
          - type: Microsoft.Authorization/roleAssignments
            apiVersion: 2020-04-01
             name: "[guid(parameters('userPrincipalName'), parameters('roleDefinitionName'), parameters('scope'))]"
            properties:
            roleDefinitionId: "[concat('/providers/Microsoft.Authorization/roleDefinitions/', guid(parameters('roleDefinitionName')))]"
            principalId: "[reference(concat('/providers/Microsoft.Directory/Users/', parameters('userPrincipalName')), '2020-04-01').id]"

          outputs:
          roleAssignmentId:
            type: string
            value: "[concat('Role Assignment ID: ', name)]"

          script:
          # PowerShell script to create a role assignment
        
          $userPrincipalName = "$(userPrincipalName)"
          $roleDefinitionName = "$(roleDefinitionName)"
          $scope = "$(scope)"

          # Get the user's object ID
          $user = Get-AzADUser -UserPrincipalName $userPrincipalName
          $userId = $user.Id

          # Get the role definition ID
          $roleDefinition = Get-AzRoleDefinition -Name $roleDefinitionName
          $roleDefinitionId = $roleDefinition.Id

          # Create the role assignment
          New-AzRoleAssignment -ObjectId $userId -RoleDefinitionId $roleDefinitionId -Scope $scope

           
          }
        azurePowerShellVersion: 'LatestVersion'
