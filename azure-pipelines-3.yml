trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'Visual Studio Professional(cb9ac514-a7d4-4892-8b9d-537c4ad22fb3)'
  resourceGroupName: 'ap-dev-apollo33-smartpos-rg'
  location: 'southindia'               # e.g., 'eastus'
  storageAccount: 'apdevapollo33possmart01'      # Unique name for the storage account

stages:
- stage: CreateResources
  jobs:
  - job: CreateRGAndStorageAccount
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(azureSubscription)
        ScriptType: 'InlineScript'
        Inline: |
          # Check if the resource group exists
          $resourceGroupExists = Get-AzResourceGroup -Name $(resourceGroup) -ErrorAction SilentlyContinue

          if (-not $resourceGroupExists) {
              # Create the resource group
              New-AzResourceGroup -Name $(resourceGroup) -Location $(location)
              Write-Output "Resource Group '$(resourceGroup)' created successfully."
          } else {
              Write-Output "Resource Group '$(resourceGroup)' already exists."
          }

          # Check if the storage account exists
          $storageAccountExists = Get-AzStorageAccount -ResourceGroupName $(resourceGroup) -Name $(storageAccount) -ErrorAction SilentlyContinue

          if (-not $storageAccountExists) {
              # Create the storage account
              New-AzStorageAccount -ResourceGroupName $(resourceGroup) -Name $(storageAccount) -Location $(location) -SkuName Standard_LRS -Kind StorageV2
              Write-Output "Storage Account '$(storageAccount)' created successfully in resource group '$(resourceGroup)'."
          } else {
              Write-Output "Storage Account '$(storageAccount)' already exists in resource group '$(resourceGroup)'."
          }
        azurePowerShellVersion: 'LatestVersion'
