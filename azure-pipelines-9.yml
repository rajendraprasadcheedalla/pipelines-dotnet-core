trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'Visual Studio Professional(cb9ac514-a7d4-4892-8b9d-537c4ad22fb3)'     # Azure service connection name
  resourceGroup: 'dev12-smartpos-rg'             # Resource group where the Data Factory and Key Vault reside
  keyVaultName: 'dev12smartposkeyvalut'              # Name of the Azure Key Vault
  dataFactoryName: 'dev12smartposadf'        # Name of the Azure Data Factory
  secretName: 'testsecret'  
stages:
- stage: GrantAccess
  jobs:
  - job: GrantAccess
    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: $(azureSubscription)
        ScriptType: 'InlineScript'
        Inline: |
          # Parameters
          $resourceGroupName = "$(resourceGroup)"
          $dataFactoryName = "$(dataFactoryName)"
          $keyVaultName = "$(keyVaultName)"
          $secretName = "$(secretName)"

          # # Login to Azure (if not already logged in)
          # Connect-AzAccount
          Write-Output "Data Factory Start "
          # Get the Data Factory
          $dataFactory = Get-AzDataFactoryV2 -ResourceGroupName $resourceGroupName -Name $dataFactoryName
          Write-Output "Data Factory End  '$dataFactoryName' exists"

          if (-not $dataFactory) {
              Write-Error "Data Factory '$dataFactoryName' does not exist in resource group '$resourceGroupName'."
              exit 1
          }

          # Get the principal ID of the Data Factory's managed identity
          $principalId = $dataFactory.Identity.PrincipalId

          # Get the Key Vault resource ID
          $keyVault = Get-AzKeyVault -VaultName $keyVaultName -ResourceGroupName $resourceGroupName

          if (-not $keyVault) {
              Write-Error "Key Vault '$keyVaultName' does not exist in resource group '$resourceGroupName'."
              exit 1
          }

          # Assign the Key Vault Secrets User role to the Data Factory's managed identity
          New-AzRoleAssignment -ObjectId $principalId -RoleDefinitionName "Key Vault Secrets User" -Scope $keyVault.ResourceId

          Write-Output "Granted 'Key Vault Secrets User' role to Data Factory '$dataFactoryName' for Key Vault '$keyVaultName'."

          # Test access by trying to get the secret
          try {
              $secretValue = Get-AzKeyVaultSecret -VaultName $keyVaultName -Name $secretName
              Write-Output "Successfully retrieved the secret '$($secretValue.Name)'. Value: $($secretValue.SecretValueText)"
          } catch {
              Write-Error "Failed to retrieve the secret '$($secretName)'. Error: $_"
              exit 1
          }
        azurePowerShellVersion: 'LatestVersion'
